{"version":3,"file":"index.js","sources":["../src/chessUtils.js","../src/dumbBoard.js","../src/chessApi.js","../src/game.js","../src/index.js"],"sourcesContent":["export const DIMS = 8\n\nconst WHITE_KING = '\\u2654'\nconst WHITE_QUEEN = '\\u2655'\nconst WHITE_ROOK = '\\u2656'\nconst WHITE_BISHOP = '\\u2657'\nconst WHITE_KNIGHT = '\\u2658'\nconst WHITE_PAWN = '\\u2659'\nconst BLACK_KING = '\\u265A'\nconst BLACK_QUEEN = '\\u265B'\nconst BLACK_ROOK = '\\u265C'\nconst BLACK_BISHOP = '\\u265D'\nconst BLACK_KNIGHT = '\\u265E'\nconst BLACK_PAWN = '\\u265F'\n\nexport const pieceLookup = {\n    K: WHITE_KING,\n    Q: WHITE_QUEEN,\n    R: WHITE_ROOK,\n    B: WHITE_BISHOP,\n    N: WHITE_KNIGHT,\n    P: WHITE_PAWN,\n    k: BLACK_KING,\n    q: BLACK_QUEEN,\n    r: BLACK_ROOK,\n    b: BLACK_BISHOP,\n    n: BLACK_KNIGHT,\n    p: BLACK_PAWN\n}\n\nexport function boardCoord2key(nDims, boardCoord) {\n    // eslint-disable-next-line prettier/prettier\n    return (nDims * boardCoord.row) + boardCoord.col\n}\n\nexport function piece2Color(piece) {\n    if (!piece) {\n        return null\n    }\n    return piece.toUpperCase() === piece ? 'W' : 'B'\n}\n\nexport function moveNum2Color(moveNum) {\n    // eslint-disable-next-line prettier/prettier\n    return ((moveNum % 2) === 0) ? 'W' : 'B'\n}\n\nexport function boardCoord2uci(boardCoord) {\n    const file = String.fromCharCode('a'.charCodeAt() + boardCoord.col)\n    const rank = boardCoord.row + 1\n    return `${file}${rank}`\n}\n\n// function uci2boardCoord(uci) {\n//     return {row: parseInt(uci.slice(1))-1, col: uci.slice(0, 1).charCodeAt() - \"a\".charCodeAt()}\n// }\n\nexport function getLegalDestsFrom(boardCoord, legalMoves) {\n    const startCoord = boardCoord2uci(boardCoord)\n    // filter the legal moves down to those starting from the boardCoord\n    const legalMovesFiltered = legalMoves.filter(\n        m => m.slice(0, 2) === startCoord\n    )\n    // e.g. maps [\"e2e3\", \"e2e4\"] to [\"e3\", \"e4\"]\n    const legalDests = legalMovesFiltered.map(m => m.slice(2))\n    return legalDests\n}\n\nexport function checkLegalPos(position, castle) {\n    const positionStats = {\n        K: { locations: [], count: 0 },\n        Q: { locations: [], count: 0 },\n        R: { locations: [], count: 0 },\n        B: { locations: [], count: 0 },\n        N: { locations: [], count: 0 },\n        P: { locations: [], count: 0 },\n        k: { locations: [], count: 0 },\n        q: { locations: [], count: 0 },\n        r: { locations: [], count: 0 },\n        b: { locations: [], count: 0 },\n        n: { locations: [], count: 0 },\n        p: { locations: [], count: 0 }\n    }\n    for (let row = 0; row < DIMS; row++) {\n        for (let col = 0; col < DIMS; col++) {\n            const piece = position[row][col]\n            if (piece) {\n                positionStats[piece].count++\n                positionStats[piece].locations.push({ row: row, col: col })\n            }\n        }\n    }\n    const msg = []\n    const whiteKCount = positionStats.K.count\n    if (whiteKCount === 0) {\n        msg.push('No White King.')\n    }\n    if (whiteKCount > 1) {\n        msg.push(`${positionStats.K.count} White Kings (must be 1).`)\n    }\n\n    const blackKCount = positionStats.k.count\n    if (blackKCount === 0) {\n        msg.push('No Black King.')\n    }\n    if (blackKCount > 1) {\n        msg.push(`${positionStats.K.count} Black Kings (must be 1).`)\n    }\n\n    if (blackKCount === 1 && whiteKCount === 1) {\n        if (\n            /* eslint-disable */\n            Math.abs(positionStats.K.locations[0].row - positionStats.k.locations[0].row) <= 1\n            &&\n            Math.abs(positionStats.K.locations[0].col - positionStats.k.locations[0].col) <= 1\n            /* eslint-enable */\n        ) {\n            msg.push('Kings are next to each other.')\n        }\n    }\n\n    if (positionStats.P.count > 8) {\n        msg.push(`${positionStats.P.count} White Pawns (must be 8 or fewer).`)\n    }\n    if (positionStats.p.count > 8) {\n        msg.push(`${positionStats.P.count} Black Pawns (must be 8 or fewer).`)\n    }\n    if (position[0].includes('P')) {\n        msg.push('White Pawn on back rank.')\n    }\n    if (position[7].includes('P')) {\n        msg.push('White Pawn on eigth rank.')\n    }\n    if (position[7].includes('p')) {\n        msg.push('Black Pawn on back rank.')\n    }\n    if (position[0].includes('p')) {\n        msg.push('Black Pawn on eigth rank.')\n    }\n    // Check White castling\n    const wKingOnOrig = position[0][4] === 'K'\n    if (castle.includes('K')) {\n        if (!wKingOnOrig) {\n            msg.push(\n                'O-O available for White, but King not on original square.'\n            )\n        }\n        if (position[0][7] !== 'R') {\n            msg.push(\n                \"O-O available for White, but King's Rook not on original square.\"\n            )\n        }\n    }\n    if (castle.includes('Q')) {\n        if (!wKingOnOrig) {\n            msg.push(\n                'O-O-O available for White, but King not on original square.'\n            )\n        }\n        if (position[0][0] !== 'R') {\n            msg.push(\n                \"O-O-O available for White, but Queen's Rook not on original square.\"\n            )\n        }\n    }\n    // Check Black castling\n    const bKingOnOrig = position[7][4] === 'k'\n    if (castle.includes('k')) {\n        if (!bKingOnOrig) {\n            msg.push(\n                'O-O available for Black, but King not on original square.'\n            )\n        }\n        if (position[7][7] !== 'r') {\n            msg.push(\n                \"O-O available for Black, but King's Rook not on original square.\"\n            )\n        }\n    }\n    if (castle.includes('q')) {\n        if (!bKingOnOrig) {\n            msg.push(\n                'O-O-O available for Black, but King not on original square.'\n            )\n        }\n        if (position[7][0] !== 'r') {\n            msg.push(\n                \"O-O-O available for Black, but Queen's Rook not on original square.\"\n            )\n        }\n    }\n    return msg\n}\n","import React, { useState } from 'react'\nimport * as chessUtils from './chessUtils.js'\nimport { DIMS } from './chessUtils.js'\n\nconst Square = ({ onClick, piece, highlighted, colorClass }) => {\n    const highlightClass = highlighted ? 'square-highlighted' : ''\n    return (\n        <button\n            className={`square ${highlightClass} ${colorClass}`}\n            onClick={onClick}\n        >\n            {piece}\n        </button>\n    )\n}\n\nconst DumbBoard = ({ position, highlightList, handleClick }) => {\n    const [reverse, setReverse] = useState(false)\n\n    const renderSquare = (piece, boardCoord) => {\n        const highlighted = highlightList.includes(\n            chessUtils.boardCoord2uci(boardCoord)\n        )\n        const colorClass =\n            boardCoord.row % 2 === boardCoord.col % 2\n                ? 'square-black'\n                : 'square-white'\n\n        return (\n            <Square\n                key={chessUtils.boardCoord2key(DIMS, boardCoord)}\n                piece={piece}\n                onClick={() => handleClick(boardCoord)}\n                highlighted={highlighted}\n                colorClass={colorClass}\n            />\n        )\n    }\n\n    const renderRow = (row, rowInd, reverse) => {\n        const [startInd, endInd, indStep] = !reverse\n            ? [0, DIMS, 1]\n            : [DIMS - 1, -1, -1]\n        const rowElement = []\n\n        for (let colInd = startInd; colInd !== endInd; colInd += indStep) {\n            rowElement.push(\n                renderSquare(chessUtils.pieceLookup[row[colInd]], {\n                    row: rowInd,\n                    col: colInd\n                })\n            )\n        }\n        return (\n            <div key={100 + rowInd} className='board-row'>\n                {rowElement}\n            </div>\n        )\n    }\n\n    const renderBoard = () => {\n        // Really need the old school loops - reversing causes problems, as does auto\n        // generation of index with forEach\n        const [startInd, endInd, indStep] = reverse\n            ? [0, DIMS, 1]\n            : [DIMS - 1, -1, -1]\n        const boardElement = []\n\n        for (let rowInd = startInd; rowInd !== endInd; rowInd += indStep) {\n            boardElement.push(renderRow(position[rowInd], rowInd, reverse))\n        }\n        return boardElement\n    }\n\n    const handleReverseClick = reverseIn => {\n        setReverse(reverseIn)\n    }\n\n    return (\n        <div>\n            <button onClick={() => handleReverseClick(!reverse)}>\n                {reverse ? '^' : 'v'}\n            </button>\n            <div className='game-board'>{renderBoard()}</div>\n        </div>\n    )\n}\n\nexport default DumbBoard\n","import Chess from 'chess.js'\nimport * as chessUtils from './chessUtils.js'\n\n// export const emptyPosition = [\n//     ['', '', '', '', '', '', '', ''],\n//     ['', '', '', '', '', '', '', ''],\n//     ['', '', '', '', '', '', '', ''],\n//     ['', '', '', '', '', '', '', ''],\n//     ['', '', '', '', '', '', '', ''],\n//     ['', '', '', '', '', '', '', ''],\n//     ['', '', '', '', '', '', '', ''],\n//     ['', '', '', '', '', '', '', '']\n// ]\n\nexport const calcGame = (moves, fen) => {\n    const game = fen ? new Chess(fen) : new Chess()\n    moves.forEach(element => {\n        game.move(element)\n    })\n    return game\n}\n\nexport const board2Position = board => {\n    /* eslint-disable */\n    return board.map(\n        row => row.map(\n            el =>\n            el\n                ? el.color === 'b' ? el.type : el.type.toUpperCase()\n                : ''\n        )\n    ).reverse()\n    /* eslint-enable */\n}\n\nexport const analyzeGame = game => {\n    const msg = []\n    const turn = game.turn() === 'w' ? 'White' : 'Black'\n    if (game.game_over()) {\n        msg.push('Game over.')\n        if (game.in_checkmate()) {\n            msg.push(`${turn} is checkmated.`)\n        } else if (game.in_draw()) {\n            if (game.in_stalemate()) {\n                msg.push('Draw by stalemate.')\n            } else if (game.in_threefold_repetition()) {\n                msg.push('Draw by threefold repetition.')\n            } else if (game.insufficient_material()) {\n                msg.push('Draw by insufficient material.')\n            } else {\n                msg.push('Draw by 50-move rule.')\n            }\n        }\n    } else {\n        msg.push(`${turn}'s turn.`)\n        if (game.in_check()) {\n            msg.push(`${turn} is in check.`)\n        }\n    }\n    return msg\n}\n\nconst chessApiState = game => {\n    const legalMoves = game.moves({ verbose: true })\n    const mappedMoves = legalMoves.map(move => `${move.from}${move.to}`)\n    return {\n        game: game,\n        moves: game.history(),\n        legalMoves: mappedMoves,\n        position: board2Position(game.board()),\n        status: analyzeGame(game)\n    }\n}\n\nexport const initGame = (fen = null) => {\n    const game = calcGame([], fen)\n    return chessApiState(game)\n}\n\nexport const emptyGame = () => {\n    const game = new Chess()\n    game.clear()\n    return chessApiState(game)\n}\n\nexport const fen2Game = fen => {\n    const game = new Chess(fen)\n    return chessApiState(game)\n}\n\nexport const initGameState = initGame()\nexport const initPosition = initGameState.position\nconst emptyGameState = emptyGame()\nexport const emptyPosition = emptyGameState.position\n\nexport const analyzeFen = fen => {\n    const game = new Chess(fen)\n    return analyzeGame(game)\n}\n\nexport const setup2Fen = ({\n    position,\n    turn,\n    castle,\n    enPassantSquare,\n    halfMoveClock,\n    fullMoveNumber\n}) => {\n    const game = new Chess()\n    game.clear()\n    for (let rank = 0; rank < 8; rank++) {\n        for (let file = 0; file < 8; file++) {\n            const piece = position[rank][file]\n            if (piece) {\n                const color = chessUtils.piece2Color(piece).toLowerCase()\n                const square = chessUtils.boardCoord2uci({\n                    col: file,\n                    row: rank\n                })\n                game.put({ type: piece, color: color }, square)\n            }\n        }\n    }\n    const fenTmp = game.fen()\n    const fenPos = fenTmp.split(' ')[0]\n    // const fen = `${fenTmp} ++++ ${fenPos} ${turn.toLowerCase()} ${castle} ${enPassantSquare} ${halfMove} ${fullMove}`\n    const fen = `${fenPos} ${turn.toLowerCase()} ${castle} ${enPassantSquare} ${halfMoveClock} ${fullMoveNumber}`\n    return fen\n}\n\nexport const inCheck = fen => {\n    const game = new Chess(fen)\n    return game.in_check()\n}\n\nexport const moveTo = (moves, fen) => {\n    const game = calcGame(moves, fen)\n    return chessApiState(game)\n}\n\nexport const moveAdd = (moves, newMove, fen) => {\n    const game = calcGame(moves, fen)\n    game.move(newMove, { sloppy: true })\n    return chessApiState(game)\n}\n","import React, { useState } from 'react'\nimport DumbBoard from './dumbBoard'\nimport * as chessApi from './chessApi.js'\nimport * as chessUtils from './chessUtils.js'\n\nconst SmartBoard = ({ position, turn, onMove, legalMoves }) => {\n    const [click1, setClick1] = useState(null)\n    const [legalDests, setLegalDests] = useState([])\n    const [highlightList, setHighlightList] = useState([])\n\n    const handleClick = boardCoord => {\n        if (\n            chessUtils.piece2Color(position[boardCoord.row][boardCoord.col]) ===\n            turn\n        ) {\n            setClick1(boardCoord)\n            const legalDests = chessUtils.getLegalDestsFrom(\n                boardCoord,\n                legalMoves\n            )\n            setLegalDests(legalDests)\n            const highlightList = legalDests\n            highlightList.push(chessUtils.boardCoord2uci(boardCoord))\n            setHighlightList(highlightList)\n        } else {\n            if (!click1) {\n                return\n            }\n            if (legalDests.includes(chessUtils.boardCoord2uci(boardCoord))) {\n                onMove(click1, boardCoord)\n            }\n            setClick1(null)\n            setHighlightList([])\n        }\n    }\n\n    return (\n        <DumbBoard\n            position={position}\n            highlightList={highlightList}\n            handleClick={handleClick}\n        />\n    )\n}\n\nconst ChessListingGrid = ({ moves, currentMoveNum, handleClick }) => {\n    const tableMoves = []\n    for (let i = 0; i < moves.length; i += 2) {\n        tableMoves.push([\n            { move: moves[i], index: i },\n            moves[i + 1] ? { move: moves[i + 1], index: i + 1 } : ''\n        ])\n    }\n\n    const renderCol = (row, rowIndex) => {\n        return row.map((col, colIndex) => {\n            const index = `${rowIndex},${colIndex}`\n            const move =\n                col.index + 1 === currentMoveNum ? <b>{col.move}</b> : col.move\n            /* eslint-disable */\n            return col\n                ?\n                    <div\n                        key={index}\n                        className='grid-cell grid-cell-button'\n                        onClick={() => handleClick(col.index+1)}\n                    >\n                        {move}\n                    </div>\n                :\n                    <div key={index} className='grid-cell'/>\n            /* eslint-enable */\n        })\n    }\n\n    const listing = tableMoves.map((row, index) => {\n        const newCol = renderCol(row, index)\n        return (\n            <div key={index} className='grid-wrapper'>\n                <div className='grid-cell'>{index + 1}.</div>\n                {newCol}\n            </div>\n        )\n    })\n    return (\n        <div>\n            <div className='scroll'>{listing}</div>\n            <button onClick={() => handleClick(0)}>|&lt;</button>\n            <button\n                onClick={() => handleClick(Math.max(currentMoveNum - 1, 0))}\n            >\n                &lt;\n            </button>\n            <button\n                onClick={() =>\n                    handleClick(Math.min(currentMoveNum + 1, moves.length))\n                }\n            >\n                &gt;\n            </button>\n            <button onClick={() => handleClick(moves.length)}>&gt;|</button>\n        </div>\n    )\n}\n\nconst GameInfo = ({ moves, status, currentMoveNum, handleListingClick }) => {\n    return (\n        <div className='game-info'>\n            {status}\n            <ChessListingGrid\n                moves={moves}\n                currentMoveNum={currentMoveNum}\n                handleClick={handleListingClick}\n            />\n        </div>\n    )\n}\n\nconst GameView = ({\n    position,\n    currentMoveNum,\n    legalMoves,\n    moves,\n    status,\n    handleMove,\n    handleListingClick\n}) => {\n    return (\n        <div className='game'>\n            <SmartBoard\n                position={position}\n                turn={chessUtils.moveNum2Color(currentMoveNum)}\n                onMove={handleMove}\n                legalMoves={legalMoves}\n            />\n            <GameInfo\n                moves={moves}\n                status={status}\n                currentMoveNum={currentMoveNum}\n                handleListingClick={handleListingClick}\n            />\n        </div>\n    )\n}\n\nconst Game = () => {\n    // const initGameState = chessApi.initGameState\n    const fen = 'k1K5/8/6P1/8/8/8/8/8 w - - 0 1'\n    // const fen = null\n    const initGameState = chessApi.initGame(fen)\n    // const initGameState = chessApi.fen2Game('k1K5/8/6P1/8/8/8/8/8 w - - 0 1')\n    const [moves, setMoves] = useState([])\n    const [currentMoveNum, setCurrentMoveNum] = useState(0)\n    const [position, setPosition] = useState(initGameState.position)\n    const [legalMoves, setLegalMoves] = useState(initGameState.legalMoves)\n    const [status, setStatus] = useState(initGameState.status)\n\n    // Should only get here if legal move has been made\n    const handleMove = (click1, click2) => {\n        console.log('handleMove')\n        const localMoves = moves.slice(0, currentMoveNum)\n        console.log(position)\n        const chessApiState = chessApi.moveAdd(\n            localMoves,\n            `${chessUtils.boardCoord2uci(click1)}${chessUtils.boardCoord2uci(\n                click2\n            )}`,\n            fen\n        )\n        console.log(chessApiState)\n        setMoves(chessApiState.moves)\n        updateState(chessApiState, localMoves.length + 1)\n    }\n\n    const handleListingClick = moveNum => {\n        const chessApiState = chessApi.moveTo(moves.slice(0, moveNum), fen)\n        // setMoves(chessApiState.moves)\n        updateState(chessApiState, moveNum)\n    }\n\n    const updateState = ({ position, legalMoves, status }, moveNum) => {\n        console.log('updateState', position)\n        // setGameState(chessApiState);\n        setPosition(position)\n        setLegalMoves(legalMoves)\n        setCurrentMoveNum(moveNum)\n        setStatus(status)\n    }\n\n    return (\n        <GameView\n            position={position}\n            turn={chessUtils.moveNum2Color(currentMoveNum)}\n            legalMoves={legalMoves}\n            moves={moves}\n            status={status}\n            currentMoveNum={currentMoveNum}\n            handleMove={handleMove}\n            handleListingClick={handleListingClick}\n        />\n    )\n}\n\nexport default Game\n","import React from 'react'\nimport styles from './styles.module.css'\n\nexport { default as DumbBoard } from './dumbBoard.js'\nexport { default as Game } from './game.js'\n\nexport * from './chessApi.js'\nexport * from './chessUtils.js'\n\nexport const ExampleComponent = ({ text }) => {\n    return <div className={styles.test}>Example Component: {text}</div>\n}\n"],"names":["DIMS","WHITE_KING","WHITE_QUEEN","WHITE_ROOK","WHITE_BISHOP","WHITE_KNIGHT","WHITE_PAWN","BLACK_KING","BLACK_QUEEN","BLACK_ROOK","BLACK_BISHOP","BLACK_KNIGHT","BLACK_PAWN","pieceLookup","K","Q","R","B","N","P","k","q","r","b","n","p","boardCoord2key","nDims","boardCoord","row","col","piece2Color","piece","toUpperCase","moveNum2Color","moveNum","boardCoord2uci","file","String","fromCharCode","charCodeAt","rank","getLegalDestsFrom","legalMoves","startCoord","legalMovesFiltered","filter","m","slice","legalDests","map","checkLegalPos","position","castle","positionStats","locations","count","push","msg","whiteKCount","blackKCount","Math","abs","includes","wKingOnOrig","bKingOnOrig","Square","onClick","highlighted","colorClass","highlightClass","React","DumbBoard","highlightList","handleClick","useState","reverse","setReverse","renderSquare","chessUtils","renderRow","rowInd","startInd","endInd","indStep","rowElement","colInd","renderBoard","boardElement","handleReverseClick","reverseIn","calcGame","moves","fen","game","Chess","forEach","element","move","board2Position","board","el","color","type","analyzeGame","turn","game_over","in_checkmate","in_draw","in_stalemate","in_threefold_repetition","insufficient_material","in_check","chessApiState","verbose","mappedMoves","from","to","history","status","initGame","emptyGame","clear","fen2Game","initGameState","initPosition","emptyGameState","emptyPosition","analyzeFen","setup2Fen","enPassantSquare","halfMoveClock","fullMoveNumber","toLowerCase","square","put","fenTmp","fenPos","split","inCheck","moveTo","moveAdd","newMove","sloppy","SmartBoard","onMove","click1","setClick1","setLegalDests","setHighlightList","ChessListingGrid","currentMoveNum","tableMoves","i","length","index","renderCol","rowIndex","colIndex","listing","newCol","max","min","GameInfo","handleListingClick","GameView","handleMove","Game","chessApi","setMoves","setCurrentMoveNum","setPosition","setLegalMoves","setStatus","click2","console","log","localMoves","updateState","ExampleComponent","text","styles","test"],"mappings":"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"}