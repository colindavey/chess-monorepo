{"version":3,"file":"index.modern.js","sources":["../src/chessUtils.js","../src/dumbBoard.js","../src/chessApi.js","../src/game.js","../src/index.js"],"sourcesContent":["export const DIMS = 8\n\nconst WHITE_KING = '\\u2654'\nconst WHITE_QUEEN = '\\u2655'\nconst WHITE_ROOK = '\\u2656'\nconst WHITE_BISHOP = '\\u2657'\nconst WHITE_KNIGHT = '\\u2658'\nconst WHITE_PAWN = '\\u2659'\nconst BLACK_KING = '\\u265A'\nconst BLACK_QUEEN = '\\u265B'\nconst BLACK_ROOK = '\\u265C'\nconst BLACK_BISHOP = '\\u265D'\nconst BLACK_KNIGHT = '\\u265E'\nconst BLACK_PAWN = '\\u265F'\n\nexport const pieceLookup = {\n    K: WHITE_KING,\n    Q: WHITE_QUEEN,\n    R: WHITE_ROOK,\n    B: WHITE_BISHOP,\n    N: WHITE_KNIGHT,\n    P: WHITE_PAWN,\n    k: BLACK_KING,\n    q: BLACK_QUEEN,\n    r: BLACK_ROOK,\n    b: BLACK_BISHOP,\n    n: BLACK_KNIGHT,\n    p: BLACK_PAWN\n}\n\nexport function boardCoord2key(nDims, boardCoord) {\n    // eslint-disable-next-line prettier/prettier\n    return (nDims * boardCoord.row) + boardCoord.col\n}\n\nexport function piece2Color(piece) {\n    if (!piece) {\n        return null\n    }\n    return piece.toUpperCase() === piece ? 'W' : 'B'\n}\n\nexport function moveNum2Color(moveNum) {\n    // eslint-disable-next-line prettier/prettier\n    return ((moveNum % 2) === 0) ? 'W' : 'B'\n}\n\nexport function boardCoord2uci(boardCoord) {\n    const file = String.fromCharCode('a'.charCodeAt() + boardCoord.col)\n    const rank = boardCoord.row + 1\n    return `${file}${rank}`\n}\n\n// function uci2boardCoord(uci) {\n//     return {row: parseInt(uci.slice(1))-1, col: uci.slice(0, 1).charCodeAt() - \"a\".charCodeAt()}\n// }\n\nexport function getLegalDestsFrom(boardCoord, legalMoves) {\n    const startCoord = boardCoord2uci(boardCoord)\n    // filter the legal moves down to those starting from the boardCoord\n    const legalMovesFiltered = legalMoves.filter(\n        m => m.slice(0, 2) === startCoord\n    )\n    // e.g. maps [\"e2e3\", \"e2e4\"] to [\"e3\", \"e4\"]\n    const legalDests = legalMovesFiltered.map(m => m.slice(2))\n    return legalDests\n}\n\nexport function checkLegalPos(position, castle) {\n    const positionStats = {\n        K: { locations: [], count: 0 },\n        Q: { locations: [], count: 0 },\n        R: { locations: [], count: 0 },\n        B: { locations: [], count: 0 },\n        N: { locations: [], count: 0 },\n        P: { locations: [], count: 0 },\n        k: { locations: [], count: 0 },\n        q: { locations: [], count: 0 },\n        r: { locations: [], count: 0 },\n        b: { locations: [], count: 0 },\n        n: { locations: [], count: 0 },\n        p: { locations: [], count: 0 }\n    }\n    for (let row = 0; row < DIMS; row++) {\n        for (let col = 0; col < DIMS; col++) {\n            const piece = position[row][col]\n            if (piece) {\n                positionStats[piece].count++\n                positionStats[piece].locations.push({ row: row, col: col })\n            }\n        }\n    }\n    const msg = []\n    const whiteKCount = positionStats.K.count\n    if (whiteKCount === 0) {\n        msg.push('No White King.')\n    }\n    if (whiteKCount > 1) {\n        msg.push(`${positionStats.K.count} White Kings (must be 1).`)\n    }\n\n    const blackKCount = positionStats.k.count\n    if (blackKCount === 0) {\n        msg.push('No Black King.')\n    }\n    if (blackKCount > 1) {\n        msg.push(`${positionStats.K.count} Black Kings (must be 1).`)\n    }\n\n    if (blackKCount === 1 && whiteKCount === 1) {\n        if (\n            /* eslint-disable */\n            Math.abs(positionStats.K.locations[0].row - positionStats.k.locations[0].row) <= 1\n            &&\n            Math.abs(positionStats.K.locations[0].col - positionStats.k.locations[0].col) <= 1\n            /* eslint-enable */\n        ) {\n            msg.push('Kings are next to each other.')\n        }\n    }\n\n    if (positionStats.P.count > 8) {\n        msg.push(`${positionStats.P.count} White Pawns (must be 8 or fewer).`)\n    }\n    if (positionStats.p.count > 8) {\n        msg.push(`${positionStats.P.count} Black Pawns (must be 8 or fewer).`)\n    }\n    if (position[0].includes('P')) {\n        msg.push('White Pawn on back rank.')\n    }\n    if (position[7].includes('P')) {\n        msg.push('White Pawn on eigth rank.')\n    }\n    if (position[7].includes('p')) {\n        msg.push('Black Pawn on back rank.')\n    }\n    if (position[0].includes('p')) {\n        msg.push('Black Pawn on eigth rank.')\n    }\n    // Check White castling\n    const wKingOnOrig = position[0][4] === 'K'\n    if (castle.includes('K')) {\n        if (!wKingOnOrig) {\n            msg.push(\n                'O-O available for White, but King not on original square.'\n            )\n        }\n        if (position[0][7] !== 'R') {\n            msg.push(\n                \"O-O available for White, but King's Rook not on original square.\"\n            )\n        }\n    }\n    if (castle.includes('Q')) {\n        if (!wKingOnOrig) {\n            msg.push(\n                'O-O-O available for White, but King not on original square.'\n            )\n        }\n        if (position[0][0] !== 'R') {\n            msg.push(\n                \"O-O-O available for White, but Queen's Rook not on original square.\"\n            )\n        }\n    }\n    // Check Black castling\n    const bKingOnOrig = position[7][4] === 'k'\n    if (castle.includes('k')) {\n        if (!bKingOnOrig) {\n            msg.push(\n                'O-O available for Black, but King not on original square.'\n            )\n        }\n        if (position[7][7] !== 'r') {\n            msg.push(\n                \"O-O available for Black, but King's Rook not on original square.\"\n            )\n        }\n    }\n    if (castle.includes('q')) {\n        if (!bKingOnOrig) {\n            msg.push(\n                'O-O-O available for Black, but King not on original square.'\n            )\n        }\n        if (position[7][0] !== 'r') {\n            msg.push(\n                \"O-O-O available for Black, but Queen's Rook not on original square.\"\n            )\n        }\n    }\n    return msg\n}\n","import React, { useState } from 'react'\nimport * as chessUtils from './chessUtils.js'\nimport { DIMS } from './chessUtils.js'\n\nconst Square = ({ onClick, piece, highlighted, colorClass }) => {\n    const highlightClass = highlighted ? 'square-highlighted' : ''\n    return (\n        <button\n            className={`square ${highlightClass} ${colorClass}`}\n            onClick={onClick}\n        >\n            {piece}\n        </button>\n    )\n}\n\nconst DumbBoard = ({ position, highlightList, handleClick }) => {\n    const [reverse, setReverse] = useState(false)\n\n    const renderSquare = (piece, boardCoord) => {\n        const highlighted = highlightList.includes(\n            chessUtils.boardCoord2uci(boardCoord)\n        )\n        const colorClass =\n            boardCoord.row % 2 === boardCoord.col % 2\n                ? 'square-black'\n                : 'square-white'\n\n        return (\n            <Square\n                key={chessUtils.boardCoord2key(DIMS, boardCoord)}\n                piece={piece}\n                onClick={() => handleClick(boardCoord)}\n                highlighted={highlighted}\n                colorClass={colorClass}\n            />\n        )\n    }\n\n    const renderRow = (row, rowInd, reverse) => {\n        const [startInd, endInd, indStep] = !reverse\n            ? [0, DIMS, 1]\n            : [DIMS - 1, -1, -1]\n        const rowElement = []\n\n        for (let colInd = startInd; colInd !== endInd; colInd += indStep) {\n            rowElement.push(\n                renderSquare(chessUtils.pieceLookup[row[colInd]], {\n                    row: rowInd,\n                    col: colInd\n                })\n            )\n        }\n        return (\n            <div key={100 + rowInd} className='board-row'>\n                {rowElement}\n            </div>\n        )\n    }\n\n    const renderBoard = () => {\n        // Really need the old school loops - reversing causes problems, as does auto\n        // generation of index with forEach\n        const [startInd, endInd, indStep] = reverse\n            ? [0, DIMS, 1]\n            : [DIMS - 1, -1, -1]\n        const boardElement = []\n\n        for (let rowInd = startInd; rowInd !== endInd; rowInd += indStep) {\n            boardElement.push(renderRow(position[rowInd], rowInd, reverse))\n        }\n        return boardElement\n    }\n\n    const handleReverseClick = reverseIn => {\n        setReverse(reverseIn)\n    }\n\n    return (\n        <div>\n            <button onClick={() => handleReverseClick(!reverse)}>\n                {reverse ? '^' : 'v'}\n            </button>\n            <div className='game-board'>{renderBoard()}</div>\n        </div>\n    )\n}\n\nexport default DumbBoard\n","import Chess from 'chess.js'\nimport * as chessUtils from './chessUtils.js'\n\n// export const emptyPosition = [\n//     ['', '', '', '', '', '', '', ''],\n//     ['', '', '', '', '', '', '', ''],\n//     ['', '', '', '', '', '', '', ''],\n//     ['', '', '', '', '', '', '', ''],\n//     ['', '', '', '', '', '', '', ''],\n//     ['', '', '', '', '', '', '', ''],\n//     ['', '', '', '', '', '', '', ''],\n//     ['', '', '', '', '', '', '', '']\n// ]\n\nexport const calcGame = (moves, fen) => {\n    const game = fen ? new Chess(fen) : new Chess()\n    moves.forEach(element => {\n        game.move(element)\n    })\n    return game\n}\n\nexport const board2Position = board => {\n    /* eslint-disable */\n    return board.map(\n        row => row.map(\n            el =>\n            el\n                ? el.color === 'b' ? el.type : el.type.toUpperCase()\n                : ''\n        )\n    ).reverse()\n    /* eslint-enable */\n}\n\nexport const analyzeGame = game => {\n    const msg = []\n    const turn = game.turn() === 'w' ? 'White' : 'Black'\n    if (game.game_over()) {\n        msg.push('Game over.')\n        if (game.in_checkmate()) {\n            msg.push(`${turn} is checkmated.`)\n        } else if (game.in_draw()) {\n            if (game.in_stalemate()) {\n                msg.push('Draw by stalemate.')\n            } else if (game.in_threefold_repetition()) {\n                msg.push('Draw by threefold repetition.')\n            } else if (game.insufficient_material()) {\n                msg.push('Draw by insufficient material.')\n            } else {\n                msg.push('Draw by 50-move rule.')\n            }\n        }\n    } else {\n        msg.push(`${turn}'s turn.`)\n        if (game.in_check()) {\n            msg.push(`${turn} is in check.`)\n        }\n    }\n    return msg\n}\n\nconst chessApiState = game => {\n    const legalMoves = game.moves({ verbose: true })\n    const mappedMoves = legalMoves.map(move => `${move.from}${move.to}`)\n    return {\n        game: game,\n        moves: game.history(),\n        legalMoves: mappedMoves,\n        position: board2Position(game.board()),\n        status: analyzeGame(game)\n    }\n}\n\nexport const initGame = (fen = null) => {\n    const game = calcGame([], fen)\n    return chessApiState(game)\n}\n\nexport const emptyGame = () => {\n    const game = new Chess()\n    game.clear()\n    return chessApiState(game)\n}\n\nexport const fen2Game = fen => {\n    const game = new Chess(fen)\n    return chessApiState(game)\n}\n\nexport const initGameState = initGame()\nexport const initPosition = initGameState.position\nconst emptyGameState = emptyGame()\nexport const emptyPosition = emptyGameState.position\n\nexport const analyzeFen = fen => {\n    const game = new Chess(fen)\n    return analyzeGame(game)\n}\n\nexport const setup2Fen = ({\n    position,\n    turn,\n    castle,\n    enPassantSquare,\n    halfMoveClock,\n    fullMoveNumber\n}) => {\n    const game = new Chess()\n    game.clear()\n    for (let rank = 0; rank < 8; rank++) {\n        for (let file = 0; file < 8; file++) {\n            const piece = position[rank][file]\n            if (piece) {\n                const color = chessUtils.piece2Color(piece).toLowerCase()\n                const square = chessUtils.boardCoord2uci({\n                    col: file,\n                    row: rank\n                })\n                game.put({ type: piece, color: color }, square)\n            }\n        }\n    }\n    const fenTmp = game.fen()\n    const fenPos = fenTmp.split(' ')[0]\n    // const fen = `${fenTmp} ++++ ${fenPos} ${turn.toLowerCase()} ${castle} ${enPassantSquare} ${halfMove} ${fullMove}`\n    const fen = `${fenPos} ${turn.toLowerCase()} ${castle} ${enPassantSquare} ${halfMoveClock} ${fullMoveNumber}`\n    return fen\n}\n\nexport const inCheck = fen => {\n    const game = new Chess(fen)\n    return game.in_check()\n}\n\nexport const moveTo = (moves, fen) => {\n    const game = calcGame(moves, fen)\n    return chessApiState(game)\n}\n\nexport const moveAdd = (moves, newMove, fen) => {\n    const game = calcGame(moves, fen)\n    game.move(newMove, { sloppy: true })\n    return chessApiState(game)\n}\n","import React, { useState } from 'react'\nimport DumbBoard from './dumbBoard'\nimport * as chessApi from './chessApi.js'\nimport * as chessUtils from './chessUtils.js'\n\nconst SmartBoard = ({ position, turn, onMove, legalMoves }) => {\n    const [click1, setClick1] = useState(null)\n    const [legalDests, setLegalDests] = useState([])\n    const [highlightList, setHighlightList] = useState([])\n\n    const handleClick = boardCoord => {\n        if (\n            chessUtils.piece2Color(position[boardCoord.row][boardCoord.col]) ===\n            turn\n        ) {\n            setClick1(boardCoord)\n            const legalDests = chessUtils.getLegalDestsFrom(\n                boardCoord,\n                legalMoves\n            )\n            setLegalDests(legalDests)\n            const highlightList = legalDests\n            highlightList.push(chessUtils.boardCoord2uci(boardCoord))\n            setHighlightList(highlightList)\n        } else {\n            if (!click1) {\n                return\n            }\n            if (legalDests.includes(chessUtils.boardCoord2uci(boardCoord))) {\n                onMove(click1, boardCoord)\n            }\n            setClick1(null)\n            setHighlightList([])\n        }\n    }\n\n    return (\n        <DumbBoard\n            position={position}\n            highlightList={highlightList}\n            handleClick={handleClick}\n        />\n    )\n}\n\nconst ChessListingGrid = ({ moves, currentMoveNum, handleClick }) => {\n    const tableMoves = []\n    for (let i = 0; i < moves.length; i += 2) {\n        tableMoves.push([\n            { move: moves[i], index: i },\n            moves[i + 1] ? { move: moves[i + 1], index: i + 1 } : ''\n        ])\n    }\n\n    const renderCol = (row, rowIndex) => {\n        return row.map((col, colIndex) => {\n            const index = `${rowIndex},${colIndex}`\n            const move =\n                col.index + 1 === currentMoveNum ? <b>{col.move}</b> : col.move\n            /* eslint-disable */\n            return col\n                ?\n                    <div\n                        key={index}\n                        className='grid-cell grid-cell-button'\n                        onClick={() => handleClick(col.index+1)}\n                    >\n                        {move}\n                    </div>\n                :\n                    <div key={index} className='grid-cell'/>\n            /* eslint-enable */\n        })\n    }\n\n    const listing = tableMoves.map((row, index) => {\n        const newCol = renderCol(row, index)\n        return (\n            <div key={index} className='grid-wrapper'>\n                <div className='grid-cell'>{index + 1}.</div>\n                {newCol}\n            </div>\n        )\n    })\n    return (\n        <div>\n            <div className='scroll'>{listing}</div>\n            <button onClick={() => handleClick(0)}>|&lt;</button>\n            <button\n                onClick={() => handleClick(Math.max(currentMoveNum - 1, 0))}\n            >\n                &lt;\n            </button>\n            <button\n                onClick={() =>\n                    handleClick(Math.min(currentMoveNum + 1, moves.length))\n                }\n            >\n                &gt;\n            </button>\n            <button onClick={() => handleClick(moves.length)}>&gt;|</button>\n        </div>\n    )\n}\n\nconst GameInfo = ({ moves, status, currentMoveNum, handleListingClick }) => {\n    return (\n        <div className='game-info'>\n            {status}\n            <ChessListingGrid\n                moves={moves}\n                currentMoveNum={currentMoveNum}\n                handleClick={handleListingClick}\n            />\n        </div>\n    )\n}\n\nconst GameView = ({\n    position,\n    currentMoveNum,\n    legalMoves,\n    moves,\n    status,\n    handleMove,\n    handleListingClick\n}) => {\n    return (\n        <div className='game'>\n            <SmartBoard\n                position={position}\n                turn={chessUtils.moveNum2Color(currentMoveNum)}\n                onMove={handleMove}\n                legalMoves={legalMoves}\n            />\n            <GameInfo\n                moves={moves}\n                status={status}\n                currentMoveNum={currentMoveNum}\n                handleListingClick={handleListingClick}\n            />\n        </div>\n    )\n}\n\nconst Game = () => {\n    // const initGameState = chessApi.initGameState\n    const fen = 'k1K5/8/6P1/8/8/8/8/8 w - - 0 1'\n    // const fen = null\n    const initGameState = chessApi.initGame(fen)\n    // const initGameState = chessApi.fen2Game('k1K5/8/6P1/8/8/8/8/8 w - - 0 1')\n    const [moves, setMoves] = useState([])\n    const [currentMoveNum, setCurrentMoveNum] = useState(0)\n    const [position, setPosition] = useState(initGameState.position)\n    const [legalMoves, setLegalMoves] = useState(initGameState.legalMoves)\n    const [status, setStatus] = useState(initGameState.status)\n\n    // Should only get here if legal move has been made\n    const handleMove = (click1, click2) => {\n        console.log('handleMove')\n        const localMoves = moves.slice(0, currentMoveNum)\n        console.log(position)\n        const chessApiState = chessApi.moveAdd(\n            localMoves,\n            `${chessUtils.boardCoord2uci(click1)}${chessUtils.boardCoord2uci(\n                click2\n            )}`,\n            fen\n        )\n        console.log(chessApiState)\n        setMoves(chessApiState.moves)\n        updateState(chessApiState, localMoves.length + 1)\n    }\n\n    const handleListingClick = moveNum => {\n        const chessApiState = chessApi.moveTo(moves.slice(0, moveNum), fen)\n        // setMoves(chessApiState.moves)\n        updateState(chessApiState, moveNum)\n    }\n\n    const updateState = ({ position, legalMoves, status }, moveNum) => {\n        console.log('updateState', position)\n        // setGameState(chessApiState);\n        setPosition(position)\n        setLegalMoves(legalMoves)\n        setCurrentMoveNum(moveNum)\n        setStatus(status)\n    }\n\n    return (\n        <GameView\n            position={position}\n            turn={chessUtils.moveNum2Color(currentMoveNum)}\n            legalMoves={legalMoves}\n            moves={moves}\n            status={status}\n            currentMoveNum={currentMoveNum}\n            handleMove={handleMove}\n            handleListingClick={handleListingClick}\n        />\n    )\n}\n\nexport default Game\n","import React from 'react'\nimport styles from './styles.module.css'\n\nexport { default as DumbBoard } from './dumbBoard.js'\nexport { default as Game } from './game.js'\n\nexport * from './chessApi.js'\nexport * from './chessUtils.js'\n\nexport const ExampleComponent = ({ text }) => {\n    return <div className={styles.test}>Example Component: {text}</div>\n}\n"],"names":["DIMS","WHITE_KING","WHITE_QUEEN","WHITE_ROOK","WHITE_BISHOP","WHITE_KNIGHT","WHITE_PAWN","BLACK_KING","BLACK_QUEEN","BLACK_ROOK","BLACK_BISHOP","BLACK_KNIGHT","BLACK_PAWN","pieceLookup","K","Q","R","B","N","P","k","q","r","b","n","p","boardCoord2key","nDims","boardCoord","row","col","piece2Color","piece","toUpperCase","moveNum2Color","moveNum","boardCoord2uci","file","String","fromCharCode","charCodeAt","rank","getLegalDestsFrom","legalMoves","startCoord","legalMovesFiltered","filter","m","slice","legalDests","map","checkLegalPos","position","castle","positionStats","locations","count","push","msg","whiteKCount","blackKCount","Math","abs","includes","wKingOnOrig","bKingOnOrig","Square","onClick","highlighted","colorClass","highlightClass","DumbBoard","highlightList","handleClick","reverse","setReverse","useState","renderSquare","chessUtils","renderRow","rowInd","startInd","endInd","indStep","rowElement","colInd","renderBoard","boardElement","handleReverseClick","reverseIn","calcGame","moves","fen","game","Chess","forEach","element","move","board2Position","board","el","color","type","analyzeGame","turn","game_over","in_checkmate","in_draw","in_stalemate","in_threefold_repetition","insufficient_material","in_check","chessApiState","verbose","mappedMoves","from","to","history","status","initGame","emptyGame","clear","fen2Game","initGameState","initPosition","emptyGameState","emptyPosition","analyzeFen","setup2Fen","enPassantSquare","halfMoveClock","fullMoveNumber","toLowerCase","square","put","fenTmp","fenPos","split","inCheck","moveTo","moveAdd","newMove","sloppy","SmartBoard","onMove","click1","setClick1","setLegalDests","setHighlightList","ChessListingGrid","currentMoveNum","tableMoves","i","length","index","renderCol","rowIndex","colIndex","listing","newCol","max","min","GameInfo","handleListingClick","GameView","handleMove","Game","chessApi","setMoves","setCurrentMoveNum","setPosition","setLegalMoves","setStatus","click2","console","log","localMoves","updateState","ExampleComponent","text","styles","test"],"mappings":"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"}